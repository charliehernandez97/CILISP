(mult -1.0 2 -3 4 -5)
(add (sub 45 25) (div 10 2) (min 57 35 -22) (cond 0 3 7) (cbrt 4) (neg -5) (exp -2.0))
(max (log (exp 10)) (neg (max 110 22 11.17)) (sub (remainder -21 11) 45))
(min (add 5 27) (mult -5 -4) (abs (pow -17.1 7)))
(hypot (sqrt (div 100 5.0)) (sub 6 (sqrt (div 100.0 2))))
((let (double number (add 35 67))) (mult number 5))
((let (x 1)) (sub ((let (x 2) (y 3)) (add x y)) x))
( ( let (x (read)) (y (read)) ) (add (print (mult x y)) (print (add x y)) (print (sub x y)) (print (div x y))) )
(read)
(cond (max 1 0) 1 2)
(equal (add 45 77) (cond 0 5 122))
( (let (x lambda (y) (print y))) (x 5) )
( (let (double divide lambda (x y) (divide x y))) (divide 5 5) )
( ( let (x 100) (y 200) ) (sub (print (add x y)) (rand)) )
( ( let (x 100) (y 200) (z 300) ) (add x y z) )
( ( let (x 100) (y 200) (z 300) ) (cond x y z) )
((let (double lcd lambda (x y) (cond (less y x) (lcd y x) (cond (equal y 0) x (lcd y (remainder x y)))))) (lcd 35 45))
quit